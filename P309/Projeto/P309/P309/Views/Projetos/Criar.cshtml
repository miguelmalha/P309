@model P309.Models.Projetos

@{
    ViewBag.Title = "Criar";
}

@**
    Html.BeginForm()) - Criação de um formulário para aceitar dados do utilizador. Utilização do método POST e processamento realizado pelo método de ação do controlador
    Html.LabelFor() - Label a mostrar ao utilizador que campo irá afetar
    Html.EditorFor() - Campo para o utilizador inserir o valor do campo a afetar
    ValidationMessageFor() - Retornar mensagens em caso de erro na inserção
    ActionLink()  - retorna para a ação inserida
*@

@* código para o datepicker  *@
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">
        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });
    </script>

}

<h2>Adicionar novo projeto</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* Adicionada a string LabelText para alterar o nome do campo  *@
            @Html.LabelFor(model => model.Area, "Área", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* Adicionada a string LabelText para alterar o nome do campo  *@
            @* alterada a class para datepicker  *@
            @Html.LabelFor(model => model.DataDeCriaçao, "Data de Criação", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataDeCriaçao, new { htmlAttributes = new { @class = "datepicker" } })
                @Html.ValidationMessageFor(model => model.DataDeCriaçao, "Data de criação necessária", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @* Adicionada a string LabelText para alterar o nome do campo  *@
            @Html.LabelFor(model => model.ContactoID, "Responsável", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ContactoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContactoID, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Botão criar *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Criar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@* Botão voltar  *@
<div>
    @Html.ActionLink("Voltar", "Index")
</div>
<link />


