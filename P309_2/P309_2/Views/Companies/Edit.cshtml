@model P309_2.Models.Companies

@{
    ViewBag.Title = "Edit Company";
}

<h2>@ViewBag.Title</h2>
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.Updated)
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @if (@ViewBag.ExistingName == null)
                {
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" }) }
                else
                {
                    <div class="form-group error">
                        <label> @ViewBag.ExistingName</label>
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NIF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NIF, new { htmlAttributes = new { @class = "form-control" } })
                @if (@ViewBag.ExistingNIF == null)
                {

                    @Html.ValidationMessageFor(model => model.NIF, "", new { @class = "text-danger" }) }
                else
                {
                    <div class="form-group error">
                        <label> @ViewBag.ExistingNIF</label>
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Payment_Method_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Payment_Method_Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Payment_Method_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Payment_Day, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Payment_Day, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Payment_Day, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observations, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observations, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (@ViewBag.NoContact == null)
        {
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" }) }
        else
        {
            <div class="form-group error">
                <label> @ViewBag.NoContact</label>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />|
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
    }

</body>
</html>
