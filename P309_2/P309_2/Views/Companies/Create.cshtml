@model P309_2.Models.Companies

@{
    ViewBag.Title = "Create Company";
    ViewBag.Aux = "";
}

<h2>@ViewBag.Title</h2>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            Company Information:
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @if (@ViewBag.ExistingName == null)
                {
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" }) }
                else
                {
                    <div class="form-group error">
                        <label> @ViewBag.ExistingName</label>
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NIF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NIF, new { htmlAttributes = new { @class = "form-control" } })
                @if (@ViewBag.ExistingNIF == null)
                {

                    @Html.ValidationMessageFor(model => model.NIF, "", new { @class = "text-danger" }) }
                else
                {
                    <div class="form-group error">
                        <label> @ViewBag.ExistingNIF</label>
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Payment_Method_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Payment_Method_Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ActionLink(" Manage Payment Methods", "Payment_Methods")
                @Html.ValidationMessageFor(model => model.Payment_Method_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Payment_Day, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Payment_Day, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Payment_Day, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observations, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observations, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observations, "", new { @class = "text-danger" })
            </div>
        </div>

        <script type="text/javascript">
            function ToggleDiv(Flag) {
                if (Flag == "first") {
                    document.getElementById('tblMain').style.display = 'none';
                    document.getElementById('bt').style.display = 'none';
                    document.getElementById('bt2').style.display = 'block';

                }
                else {
                    document.getElementById('tblMain').style.display = 'block';
                    document.getElementById('bt').style.display = 'block';
                    document.getElementById('bt2').style.display = 'none';
                }
            }
        </script>



        <br />
        <p>
            Contact Information:
        </p>

        <input id="bt" type="button" onclick="ToggleDiv('first')" value="Hide" /> 
        <input id="bt2" type="button" onclick="ToggleDiv('S')" style="display:none" value="Show" />

        <div id="tblMain">
            <div class="form-group">
                @Html.LabelFor(model => model.Updated, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("Email", "", new { htmlAttributes = new { @class = "form-control" } })
                    @if (@ViewBag.ExistingEmail != null)
                    {
                        <div class="form-group error">
                            <label> @ViewBag.ExistingEmail</label>
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Updated, "Phone", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("Phone", "", new { htmlAttributes = new { @class = "form-control" } }) 
                    @if (@ViewBag.ExistingPhone != null)
                    
                    {
                        <div class="form-group error">
                            <label> @ViewBag.ExistingPhone</label>
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Updated, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("Address", "", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Updated, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("Location", "", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Updated, "Zip-Code", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("Zip-Code", "", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Updated, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("Country", "", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />|
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
    }

</body>
</html>
